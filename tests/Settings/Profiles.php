<?php
/**
 * Profiles test class.
 *
 * @copyright YetiForce Sp. z o.o
 * @license   YetiForce Public License 3.0 (licenses/LicenseEN.txt or yetiforce.com)
 * @author    Sławomir Kłos <s.klos@yetiforce.com>
 */

namespace Tests\Settings;

class Profiles extends \Tests\Base
{
	/**
	 * @var \Settings_Profiles_Record_Model Created profile object.
	 */
	private static $recordProfile;

	/**
	 * @var \Settings_Profiles_Record_Model Administrator profile from dump.
	 */
	private static $adminProfile;

	/**
	 * Creating profiles system module record for tests.
	 *
	 * @param bool         $cache
	 * @param string|false $name  profile name or autogenerated
	 *
	 * @return \Settings_Profiles_Record_Model
	 */
	public static function createProfileRecord($cache = true, $name = false)
	{
		if (static::$recordProfile && $cache) {
			return static::$recordProfile;
		}
		$recordModel = new \Settings_Profiles_Record_Model();
		$recordModel->set('profilename', $name ?? ('Autogenerated test profile ' . random_int(1, 1000)));
		$recordModel->set('description', 'autogenerated test profile');
		$recordModel->save();
		return static::$recordProfile = $recordModel;
	}

	/**
	 * Return default admin profile from install dump if found.
	 *
	 * @return \Settings_Profiles_Record_Model
	 */
	public static function getAdminProfile()
	{
		if (static::$adminProfile) {
			return static::$adminProfile;
		}
		return static::$adminProfile = \Settings_Profiles_Record_Model::getInstanceByName('Administrator');
	}

	/**
	 * Test profile add.
	 *
	 * @throws \Exception
	 */
	public function testAddProfile()
	{
		$name = 'Autogenerated test profile ' . random_int(1, 1000);
		$recordModel = static::createProfileRecord(true, $name);
		$id = $recordModel->getId();
		$this->assertNotEmpty($id, 'New profile ID should be created');
		$recordModel = \Settings_Profiles_Record_Model::getInstanceById($id);
		$this->assertSame((int) $id, (int) $recordModel->getId());
		$this->assertSame($name, $recordModel->getName());
	}
}
