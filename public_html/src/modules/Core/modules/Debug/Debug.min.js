/* {[The file is published on the basis of YetiForce Public License 3.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} */
import e from"/src/ModuleLoader.min.js";import t from"./store/index.min.js";import r from"./store/mutations.min.js";import o from"./store/getters.min.js";const s="Core.Debug";export function initialize({store:r,router:o}){r.registerModule(s.split("."),e.prepareStoreNames(s,t))}export default(function(e,t,r,o,s,i,n,g){const a=("function"==typeof r?r.options:r)||{};return a.__file="Debug.vue",a.render||(a.render=e.render,a.staticRenderFns=e.staticRenderFns,a._compiled=!0,s&&(a.functional=!0)),a._scopeId=o,a}({render:function(){var e=this.$createElement;return(this._self._c||e)("div")},staticRenderFns:[]},0,{name:s,props:{levels:{type:Array,validate(e){for(let t of e)if(-1!==["all","log","info","notice","warning","error"].indexOf(t))return!1;return!0}}},computed:{all(e=""){return this.$store.getters[o.Core.Debug.get]("all",e)},logs(e=""){return this.$store.getters[o.Core.Debug.get]("log",e)},infos(e=""){return this.$store.getters[o.Core.Debug.get]("info",e)},warnings(e=""){return this.$store.getters[o.Core.Debug.get]("warning",e)},notices(e=""){return this.$store.getters[o.Core.Debug.get]("notice",e)},errors(e=""){return this.$store.getters[o.Core.Debug.get]("error",e)}},methods:{log(e,t){this.$store.commit(r.Core.Debug.push,{type:"log",message:e,data:t}),this.$root.$emit("debug.log",{message:e,data:t}),-1!==this.levels.indexOf("log")&&console.log(e,t)},info(e,t){this.$store.commit(r.Core.Debug.push,{type:"info",message:e,data:t}),this.$root.$emit("debug.info",{message:e,data:t}),-1!==this.levels.indexOf("info")&&console.info(e,t)},notice(e,t){this.$store.commit(r.Core.Debug.push,{type:"notice",message:e,data:t}),this.$root.$emit("debug.notice",{message:e,data:t}),-1!==this.levels.indexOf("notice")&&console.log(`%c ${e}`,"color: orange",t)},warning(e,t){this.$store.commit(r.Core.Debug.push,{type:"warning",message:e,data:t}),this.$root.$emit("debug.warning",{message:e,data:t}),-1!==this.levels.indexOf("warning")&&console.warn(e,t)},error(e,t){this.$store.commit(r.Core.Debug.push,{type:"error",message:e,data:t}),this.$root.$emit("debug.error",{message:e,data:t}),-1!==this.levels.indexOf("error")&&console.error(e,t)}}},void 0,!1));