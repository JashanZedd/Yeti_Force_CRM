{"version":3,"file":"Edit.min.js","sources":["Edit.js"],"sourcesContent":["/**\n * SlaPolicy Edit Js class\n *\n * @package     Edit\n *\n * @description SlaPolicy Edit View scripts\n * @license     YetiForce Public License 3.0\n * @author      Rafal Pospiech <r.pospiech@yetiforce.com>\n */\n'use strict';\n\n$.Class(\n\t'Settings_SlaPolicy_Edit_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Register submit event\n\t\t */\n\t\tregisterSubmitEvent() {\n\t\t\tthis.container.off('submit').on('submit', e => {\n\t\t\t\tif ($(e.currentTarget).validationEngine('validate')) {\n\t\t\t\t\t$('input[name=\"conditions\"]').val(JSON.stringify(this.conditionBuilder.getConditions()));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Load condition builder\n\t\t *\n\t\t * @param   {String}  sourceModuleName\n\t\t */\n\t\tloadConditionBuilderView(sourceModuleName) {\n\t\t\tthis.conditionBuilderView = this.container.find('.js-condition-builder-view').eq(0);\n\t\t\tlet progress = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tAppConnector.request({\n\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\tparent: app.getParentModuleName(),\n\t\t\t\tview: 'Conditions',\n\t\t\t\trecord: sourceModuleName === this.sourceModuleName ? this.record : 0,\n\t\t\t\tsourceModuleName: sourceModuleName\n\t\t\t}).done(data => {\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\tthis.conditionBuilderView.html(data);\n\t\t\t\tthis.conditionBuilder = new Vtiger_ConditionBuilder_Js(\n\t\t\t\t\tthis.conditionBuilderView.find('.js-condition-builder'),\n\t\t\t\t\tsourceModuleName\n\t\t\t\t);\n\t\t\t\tthis.conditionBuilder.registerEvents();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register source module change\n\t\t */\n\t\tregisterSourceModuleChange() {\n\t\t\tthis.sourceModuleSelect = this.container.find('select[name=\"source_module\"]');\n\t\t\tthis.sourceModuleSelect.on('change', e => {\n\t\t\t\tthis.sourceModuleName = this.sourceModuleSelect.val();\n\t\t\t\tthis.loadConditionBuilderView(this.sourceModuleName);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Render business hours\n\t\t *\n\t\t * @param {Array} rows\n\t\t * @returns {String} html\n\t\t */\n\t\trenderBusinessHours(rows) {\n\t\t\tlet html = `<table class=\"table table-sm js-business-hours-table\" data-js=\"container\">`;\n\t\t\thtml += `<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan=\"6\" class=\"text-center\">${app.vtranslate('JS_BUSINESS_HOURS')}</th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th></th>\n\t\t\t\t\t<th>${app.vtranslate('JS_BUSINESS_HOURS_NAME')}</th>\n\t\t\t\t\t<th>${app.vtranslate('JS_BUSINESS_HOURS_DAYS')}</th>\n\t\t\t\t\t<th>${app.vtranslate('JS_BUSINESS_HOURS_FROM')}</th>\n\t\t\t\t\t<th>${app.vtranslate('JS_BUSINESS_HOURS_TO')}</th>\n\t\t\t\t</tr>\n\t\t\t</thead><tbody>`;\n\t\t\trows.forEach(row => {\n\t\t\t\thtml += `<tr class=\"js-business-hours-row\" data-id=\"${row.id}\" data-js=\"click\">\n\t\t\t\t\t<td class=\"js-business-hours-table-id\"><input type=\"checkbox\" class=\"checkbox js-business-hours-checkbox\"${\n\t\t\t\t\t\tthis.businessHours.indexOf(Number(row.id)) !== -1 ? ' checked=\"checked\"' : ''\n\t\t\t\t\t}></td>\n\t\t\t\t\t<td class=\"js-business-hours-table-name\">${row.name}</td>\n\t\t\t\t\t<td class=\"js-business-hours-table-days\">${row.working_days}${\n\t\t\t\t\trow.holidays ? ', ' + app.vtranslate('JS_HOLIDAYS') : ''\n\t\t\t\t}</td>\n\t\t\t\t\t<td class=\"js-business-hours-table-from\">${row.working_hours_from}</td>\n\t\t\t\t\t<td class=\"js-business-hours-table-to\">${row.working_hours_to}</td>\n\t\t\t\t</tr>`;\n\t\t\t});\n\t\t\treturn html + '</tbody></table>';\n\t\t},\n\n\t\t/**\n\t\t * Update business hours value inside hidden form input\n\t\t */\n\t\tupdateBusinessHoursValue() {\n\t\t\tthis.container.find('[name=\"business_hours\"]').val(this.businessHours.join(','));\n\t\t},\n\n\t\t/**\n\t\t * Remove business hours\n\t\t *\n\t\t * @param {Number} businessHoursId\n\t\t */\n\t\tremoveBusinessHours(businessHoursId = 0) {\n\t\t\tif (this.businessHours.indexOf(businessHoursId) !== -1) {\n\t\t\t\tthis.businessHours = this.businessHours.filter(id => id !== businessHoursId);\n\t\t\t}\n\t\t\tthis.updateBusinessHoursValue();\n\t\t},\n\n\t\t/**\n\t\t * Add business hours\n\t\t *\n\t\t * @param {Number} businessHoursId\n\t\t */\n\t\taddBusinessHours(businessHoursId) {\n\t\t\tif (this.businessHours.indexOf(businessHoursId) === -1) {\n\t\t\t\tthis.businessHours.push(businessHoursId);\n\t\t\t}\n\t\t\tthis.updateBusinessHoursValue();\n\t\t},\n\n\t\t/**\n\t\t * On business hours row click event handler\n\t\t */\n\t\tonBusinessHoursRowClick(e) {\n\t\t\te.stopPropagation();\n\t\t\tconst target = $(e.target);\n\t\t\tconst isCheckbox = target.hasClass('js-business-hours-checkbox');\n\t\t\tconst row = target.closest('tr');\n\t\t\tconst id = Number(row.data('id'));\n\t\t\tconst checkbox = row.find('input[type=\"checkbox\"]');\n\t\t\tif (checkbox.prop('checked')) {\n\t\t\t\tif (!isCheckbox) {\n\t\t\t\t\tcheckbox.prop('checked', false);\n\t\t\t\t\tthis.removeBusinessHours(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addBusinessHours(id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!isCheckbox) {\n\t\t\t\t\tcheckbox.prop('checked', true);\n\t\t\t\t\tthis.addBusinessHours(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.removeBusinessHours(id);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Register business hours table events\n\t\t */\n\t\tregisterBusinessHoursTableEvents() {\n\t\t\tconst table = this.container.find('.js-business-hours-table').eq(0);\n\t\t\ttable.find('.js-business-hours-row').on('click', this.onBusinessHoursRowClick.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Change operational hours view\n\t\t */\n\t\tchangeOperationalHoursView() {\n\t\t\tif (this.operationalHours === 1) {\n\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmodule: 'BusinessHours',\n\t\t\t\t\t\tparent: 'Settings',\n\t\t\t\t\t\tview: 'List'\n\t\t\t\t\t},\n\t\t\t\t\tdataType: 'json'\n\t\t\t\t}).done(data => {\n\t\t\t\t\tif (!data.success) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst rows = JSON.parse(data.result);\n\t\t\t\t\tthis.container.find('.js-business-hours-container-content').html(this.renderBusinessHours(rows));\n\t\t\t\t\tthis.registerBusinessHoursTableEvents();\n\t\t\t\t\tthis.container.find('.js-business-hours-container').removeClass('d-none');\n\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.container.find('.js-business-hours-container').addClass('d-none');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Register operational hours change\n\t\t */\n\t\tregisterOperationalHoursChange() {\n\t\t\tconst operationalHoursElem = this.container.find('[name=\"operational_hours\"]').eq(0);\n\t\t\toperationalHoursElem.on('change', e => {\n\t\t\t\tthis.operationalHours = Number(operationalHoursElem.val());\n\t\t\t\tthis.changeOperationalHoursView();\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Register events\n\t\t */\n\t\tregisterEvents() {\n\t\t\tthis.container = $('#EditView');\n\t\t\tthis.sourceModuleName = this.container.find('[name=\"source_module\"]').val();\n\t\t\tthis.operationalHours = Number(this.container.find('[name=\"operational_hours\"]').val());\n\t\t\tthis.businessHours = [];\n\t\t\tconst hoursFromInput = this.container.find('[name=\"business_hours\"]').val();\n\t\t\tif (hoursFromInput) {\n\t\t\t\tthis.businessHours = hoursFromInput.split(',').map(id => Number(id));\n\t\t\t}\n\t\t\tthis.record = this.container.find('input[name=\"record\"]').val();\n\t\t\tthis.registerSourceModuleChange();\n\t\t\tthis.loadConditionBuilderView(this.sourceModuleName);\n\t\t\tApp.Fields.TimePeriod.register(this.container);\n\t\t\tthis.changeOperationalHoursView();\n\t\t\tthis.registerOperationalHoursChange();\n\t\t\tthis.registerSubmitEvent();\n\t\t\tthis.container.validationEngine(app.validationEngineOptions);\n\t\t}\n\t}\n);\n"],"names":["$","Class","container","off","on","e","currentTarget","validationEngine","val","JSON","stringify","_this","conditionBuilder","getConditions","preventDefault","stopPropagation","sourceModuleName","conditionBuilderView","this","find","eq","progress","progressIndicator","request","app","getModuleName","getParentModuleName","record","done","mode","html","data","Vtiger_ConditionBuilder_Js","_this2","registerEvents","sourceModuleSelect","_this3","loadConditionBuilderView","rows","vtranslate","forEach","row","id","_this4","businessHours","indexOf","Number","name","working_days","holidays","working_hours_from","working_hours_to","join","businessHoursId","filter","updateBusinessHoursValue","push","target","isCheckbox","hasClass","closest","checkbox","prop","addBusinessHours","removeBusinessHours","onBusinessHoursRowClick","bind","operationalHours","success","parse","result","_this5","renderBusinessHours","registerBusinessHoursTableEvents","removeClass","addClass","operationalHoursElem","changeOperationalHoursView","hoursFromInput","split","map","registerSourceModuleChange","Fields","TimePeriod","register","registerOperationalHoursChange","registerSubmitEvent","validationEngineOptions"],"mappings":"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"}