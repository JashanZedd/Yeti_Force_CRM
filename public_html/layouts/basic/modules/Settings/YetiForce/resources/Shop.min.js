'use strict';

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/* {[The file is published on the basis of YetiForce Public License 3.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} */

/**
 * Class Settings_YetiForce_Shop_Js.
 * @type {window.Settings_YetiForce_Shop_Js}
 */

window.Settings_YetiForce_Shop_Js = function () {
	/**
  * Constructor.
  */
	function Settings_YetiForce_Shop_Js() {
		var modalUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'index.php?module=YetiForce&parent=Settings';
		classCallCheck(this, Settings_YetiForce_Shop_Js);

		this.container = $('.js-products-container');
		this.modalUrl = modalUrl;
	}
	/**
  * Register events.
  */


	createClass(Settings_YetiForce_Shop_Js, [{
		key: 'registerEvents',
		value: function registerEvents() {
			this.registerProductModalClick();
			this.registerBuyModalClick();
			this.registerShopSearch();
			this.showInitialModal();
		}
	}, {
		key: 'showInitialModal',
		value: function showInitialModal() {
			var request = app.convertUrlToObject(window.location.href);
			if (request.mode) {
				if (request.showBuyModal === 'buy') {
					this.showBuyModal(request.product, request.department);
				} else if (request.mode === 'showProductModal') {
					this.showProductModal(request.product, request.department);
				}
			}
		}
		/**
   * Register events.
   */

	}, {
		key: 'registerShopSearch',
		value: function registerShopSearch() {
			var _this = this;

			var searchField = this.container.find('.js-shop-search');
			searchField = searchField.length ? searchField : $('.js-shop-search');
			searchField.on('keyup', function (e) {
				var value = $(e.currentTarget).val().toLowerCase();
				_this.container.find('.js-product .js-text-search').filter(function () {
					var item = $(this).closest('.js-product');
					if ($(this).text().toLowerCase().indexOf(value) > -1) {
						item.removeClass('d-none');
					} else {
						item.addClass('d-none');
					}
				});
			}).on('click', function (e) {
				e.stopPropagation();
			});
		}
		/**
   * Register product modal click.
   *
   */

	}, {
		key: 'registerProductModalClick',
		value: function registerProductModalClick() {
			var _this2 = this;

			this.container.find('.js-product').on('click', function (e) {
				var currentTarget = $(e.currentTarget);
				_this2.showProductModal(currentTarget.data('product'), _this2.getDepartment(currentTarget));
			});
		}
		/**
   * Show product modal action.
   *
   * @param   {string}  productName
   * @param   {string}  department
   */

	}, {
		key: 'showProductModal',
		value: function showProductModal(productName, department) {
			var _this3 = this;

			app.showModalWindow(null, this.modalUrl + '&view=ProductModal&product=' + productName + (department ? '&department=' + department : ''), function (modalContainer) {
				modalContainer.find('.js-modal__save').on('click', function (_) {
					app.hideModalWindow();
					_this3.showBuyModal(productName, department);
				});
			});
		}
		/**
   * Register buy modal click.
   *
   */

	}, {
		key: 'registerBuyModalClick',
		value: function registerBuyModalClick() {
			var _this4 = this;

			this.container.find('.js-buy-modal').on('click', function (e) {
				e.stopPropagation();
				var currentTarget = $(e.currentTarget);
				_this4.showBuyModal(currentTarget.data('product'), _this4.getDepartment(currentTarget));
			});
		}
		/**
   * Show buy modal action.
   *
   * @param   {string}  productName
   * @param   {string}  department
   */

	}, {
		key: 'showBuyModal',
		value: function showBuyModal(productName, department) {
			app.showModalWindow(null, this.modalUrl + '&view=BuyModal&product=' + productName + (department ? '&department=' + department : ''), this.registerBuyModalEvents.bind(this));
		}
	}, {
		key: 'registerBuyModalEvents',
		value: function registerBuyModalEvents(modalContainer) {
			var _this5 = this;

			var companyForm = modalContainer.find('.js-update-company-form');
			var buyForm = modalContainer.find('.js-buy-form');
			modalContainer.find('.js-modal__save').on('click', function (_) {
				_this5.registerBuyModalForms(companyForm, buyForm);
			});
			if (companyForm.length) {
				companyForm.validationEngine(app.validationEngineOptions);
				companyForm.find('[data-inputmask]').inputmask();
			}
			if (buyForm.length) {
				buyForm.validationEngine(app.validationEngineOptions);
			}
		}
	}, {
		key: 'registerBuyModalForms',
		value: function registerBuyModalForms(companyForm, buyForm) {
			if (companyForm.length) {
				if (companyForm.validationEngine('validate') === true) {
					app.removeEmptyFilesInput(companyForm[0]);
					var formData = new FormData(companyForm[0]);
					var params = {
						url: 'index.php',
						type: 'POST',
						data: formData,
						processData: false,
						contentType: false
					};
					var progressIndicatorElement = $.progressIndicator({
						blockInfo: { enabled: true }
					});
					AppConnector.request(params).done(function (data) {
						if (data.success) {
							buyForm.submit();
							app.hideModalWindow();
						}
						progressIndicatorElement.progressIndicator({ mode: 'hide' });
					});
				} else {
					app.formAlignmentAfterValidation(companyForm);
				}
			} else {
				if (buyForm.validationEngine('validate') === true) {
					this.updateCustomData(buyForm);
					buyForm.submit();
					app.hideModalWindow();
				} else {
					app.formAlignmentAfterValidation(buyForm);
				}
			}
		}
		/**
   * Update custom data.
   */

	}, {
		key: 'updateCustomData',
		value: function updateCustomData(buyForm) {
			var customField = buyForm.find('.js-custom-data');
			var priceBySize = buyForm.find('.js-price-by-size');
			if (customField.length) {
				var customFields = buyForm.find('.js-custom-field');
				customFields.each(function (i, el) {
					var field = $(el);
					customField.val('' + customField.val() + field.data('name') + '::' + field.val() + (customFields.length - 1 !== i ? '|' : ''));
				});
			}
			if (priceBySize.length) {
				priceBySize.siblings('.js-price-by-size-input').val(priceBySize.find('option[value="' + priceBySize.val() + '"]').data('os0'));
			}
		}
		/**
   * Get department.
   *
   * @param   {object}  element  jQuery
   *
   * @return  {string}
   */

	}, {
		key: 'getDepartment',
		value: function getDepartment(element) {
			var department = element.closest('.js-department');
			return department.length ? department.data('department') : '';
		}
	}]);
	return Settings_YetiForce_Shop_Js;
}();
//# sourceMappingURL=Shop.min.js.map
