'use strict';

/*+***********************************************************************************
 * The contents of this file are subject to the vtiger CRM Public License Version 1.0
 * ("License"); You may not use this file except in compliance with the License
 * The Original Code is:  vtiger CRM Open Source
 * The Initial Developer of the Original Code is vtiger.
 * Portions created by vtiger are Copyright (C) vtiger.
 * All Rights Reserved.
 * Contributor(s): YetiForce.com
 *************************************************************************************/

//Show Alert if user is on a unsupported browser (IE7, IE8, ..etc)

if (/MSIE 6.0/.test(navigator.userAgent) || /MSIE 7.0/.test(navigator.userAgent) || /MSIE 8.0/.test(navigator.userAgent) || /MSIE 9.0/.test(navigator.userAgent)) {
	if (app.getCookie('oldbrowser') != 'true') {
		app.setCookie('oldbrowser', true, 365);
		window.location.href = 'layouts/basic/modules/Vtiger/browsercompatibility/Browser_compatibility.html';
	}
}

$.Class('Vtiger_Header_Js', {
	self: false,
	getInstance: function getInstance() {
		if (this.self != false) {
			return this.self;
		}
		this.self = new Vtiger_Header_Js();
		return this.self;
	}
}, {
	menuContainer: false,
	contentContainer: false,
	init: function init() {
		this.setContentsContainer('.js-base-container');
	},
	setContentsContainer: function setContentsContainer(element) {
		if (element instanceof $) {
			this.contentContainer = element;
		} else {
			this.contentContainer = $(element);
		}
		return this;
	},
	getContentsContainer: function getContentsContainer() {
		return this.contentContainer;
	},
	registerQuickCreateSearch: function registerQuickCreateSearch() {
		$('.js-quickcreate-search').on('keyup', function () {
			var value = $(this).val().toLowerCase();
			$('.quickCreateModules .js-quickcreate-search-item a').filter(function () {
				var item = $(this).closest('.js-quickcreate-search-item');
				if ($(this).text().toLowerCase().indexOf(value) > -1) {
					item.removeClass('d-none');
				} else {
					item.addClass('d-none');
				}
			});
			$('.js-quickcreate-search-block').hide();
			$('.js-quickcreate-search-item').not('.d-none').each(function () {
				$(this).closest('.js-quickcreate-search-block').show();
			});
		});
	},

	showAnnouncement: function showAnnouncement() {
		var thisInstance = this;
		var announcementContainer = $('#announcements');
		var announcements = announcementContainer.find('.announcement');
		if (announcements.length > 0) {
			var announcement = announcements.first();
			var aid = announcement.data('id');

			app.showModalWindow(announcement.find('.modal'), function (modal) {
				announcement.remove();
				modal.find('button').on('click', function (e) {
					AppConnector.request({
						module: 'Announcements',
						action: 'BasicAjax',
						mode: 'mark',
						record: aid,
						type: $(this).data('type')
					}).done(function (res) {
						app.hideModalWindow();
						thisInstance.showAnnouncement();
					});
				});
			}, '', { backdrop: 'static', keyboard: false });
		}
	},
	registerAnnouncements: function registerAnnouncements() {
		var thisInstance = this;
		var announcementContainer = $('#announcements');
		if (announcementContainer.length == 0) {
			return false;
		}
		thisInstance.showAnnouncement();
	},
	registerCalendarButtonClickEvent: function registerCalendarButtonClickEvent() {
		var element = $('#calendarBtn');
		var dateFormat = element.data('dateFormat');
		var currentDate = element.data('date');
		var vtigerDateFormat = app.convertToDatePickerFormat(dateFormat);
		element.on('click', function (e) {
			e.stopImmediatePropagation();
			element.closest('div.nav').find('div.open').removeClass('open');
			var calendar = $('#' + element.data('datepickerId'));
			if ($(calendar).is(':visible')) {
				element.DatePickerHide();
			} else {
				element.DatePickerShow();
			}
		});
		element.DatePicker({
			format: vtigerDateFormat,
			date: currentDate,
			calendars: 1,
			starts: 1,
			className: 'globalCalendar'
		});
	},
	isFreeDay: function isFreeDay(dayOfWeek) {
		if (dayOfWeek == 0 || dayOfWeek == 6) {
			return true;
		}
		return false;
	},
	basicSearch: function basicSearch() {
		var thisInstance = this;
		$('.js-global-search__value').on('keypress', function (e) {
			var currentTarget = $(e.currentTarget);
			if (e.which == 13) {
				thisInstance.hideSearchMenu();
				thisInstance.labelSearch(currentTarget);
			}
		});
		$('.js-global-search-operator').on('click', function (e) {
			var currentTarget = $(e.target);
			var block = currentTarget.closest('.js-global-search__input');
			block.find('.js-global-search__value').data('operator', currentTarget.data('operator'));
			block.find('.js-global-search-operator .dropdown-item').removeClass('active');
			currentTarget.closest('.dropdown-item').addClass('active');
		});
		if ($('#gsAutocomplete').val() == 1) {
			$.widget('custom.gsAutocomplete', $.ui.autocomplete, {
				_create: function _create() {
					this._super();
					this.widget().menu('option', 'items', '> :not(.ui-autocomplete-category)');
				},
				_renderMenu: function _renderMenu(ul, items) {
					var that = this,
					    currentCategory = '';
					$.each(items, function (index, item) {
						if (item.category != currentCategory) {
							ul.append("<li class='ui-autocomplete-category'>" + item.category + '</li>');
							currentCategory = item.category;
						}
						that._renderItemData(ul, item);
					});
				},
				_renderItemData: function _renderItemData(ul, item) {
					return this._renderItem(ul, item).data('ui-autocomplete-item', item);
				},
				_renderItem: function _renderItem(ul, item) {
					var url = 'index.php?module=' + item.module + '&view=Detail&record=' + item.id;
					return $('<li>').data('item.autocomplete', item).append($("<a href='" + url + "' title='" + item.label + "'></a>").html(item.label)).appendTo(ul);
				}
			});
			$('.js-global-search__value').gsAutocomplete({
				minLength: app.getMainParams('gsMinLength'),
				source: function source(request, response) {
					var basicSearch = new Vtiger_BasicSearch_Js();
					basicSearch.reduceNumberResults = app.getMainParams('gsAmountResponse');
					basicSearch.returnHtml = false;
					basicSearch.setMainContainer(this.element.closest('.js-global-search__input'));
					basicSearch.search(request.term).done(function (data) {
						data = JSON.parse(data);
						var serverDataFormat = data.result;
						var reponseDataList = [];
						for (var id in serverDataFormat) {
							var responseData = serverDataFormat[id];
							reponseDataList.push(responseData);
						}
						response(reponseDataList);
					});
				},
				classes: {
					'ui-autocomplete': 'u-overflow-y-auto u-overflow-x-hidden u-max-h-70vh u-max-w-sm-70 u-max-w-lg-40'
				},
				select: function select(event, ui) {
					var selectedItemData = ui.item;
					if (selectedItemData.permitted) {
						var url = 'index.php?module=' + selectedItemData.module + '&view=Detail&record=' + selectedItemData.id;
						window.location.href = url;
					}
					return false;
				},
				close: function close(event, ui) {
					//$('.js-global-search__value').val('');
				}
			});
		}
	},
	labelSearch: function labelSearch(currentTarget) {
		var val = currentTarget.val();
		if (val == '') {
			app.showAlert(app.vtranslate('JS_PLEASE_ENTER_SOME_VALUE'));
			currentTarget.focus();
			return false;
		}
		var progress = $.progressIndicator({
			position: 'html',
			blockInfo: {
				enabled: true
			}
		});
		var basicSearch = new Vtiger_BasicSearch_Js();
		basicSearch.setMainContainer(currentTarget.closest('.js-global-search__input'));
		basicSearch.search(val).done(function (data) {
			basicSearch.showSearchResults(data);
			progress.progressIndicator({
				mode: 'hide'
			});
		});
	},
	registerHotKeys: function registerHotKeys() {
		$('.hotKey').each(function (index) {
			var thisObject = this;
			var key = $(thisObject).data('hotkeys');
			if (key != '') {
				Mousetrap.bind(key, function () {
					thisObject.click();
				});
			}
		});
	},
	/**
  * Invoke App.Components.QuickCreate.createRecord
  *
  * @param   {string}  moduleName
  * @param   {object}  params
  */
	quickCreateModule: function quickCreateModule(moduleName) {
		var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		App.Components.QuickCreate.createRecord(moduleName, params);
	},
	/**
  * Invoke App.Components.QuickCreate.getForm
  *
  * @param   {string}  url
  * @param   {string}  moduleName
  * @param   {object}  params
  *
  * @return  {function} which return aDeferred
  */
	getQuickCreateForm: function getQuickCreateForm(url, moduleName) {
		var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

		return App.Components.QuickCreate.getForm(url, moduleName, params);
	},
	/**
  * Invoke App.Components.QuickCreate.showModal
  *
  * @param   {string}  html
  * @param   {object}  params
  */
	handleQuickCreateData: function handleQuickCreateData(html) {
		var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		App.Components.QuickCreate.showModal(html, params);
	},
	/**
  * Invoke App.Components.QuickCreate.registerPostLoadEvents
  *
  * @param   {object}  form jQuery
  * @param   {object}  params
  *
  * @return  {function} which return boolean
  */
	registerQuickCreatePostLoadEvents: function registerQuickCreatePostLoadEvents(form, params) {
		App.Components.QuickCreate.registerPostLoadEvents(form, params);
	},
	/**
  * Invoke App.Components.QuickCreate.registerHelpInfo
  *
  * @param   {object}  container jQuery
  */
	registerHelpInfo: function registerHelpInfo() {
		var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $('form[name="QuickCreate"]');

		App.Components.QuickCreate.registerHelpInfo(container);
	},
	/**
  * Invoke App.Components.QuickCreate.goToFullForm
  *
  * @param   {object}  form  jQuery
  */
	quickCreateGoToFullForm: function quickCreateGoToFullForm(form, editViewUrl) {
		App.Components.QuickCreate.goToFullForm(form, editViewUrl);
	},
	/**
  * Invoke App.Components.QuickCreate.registerTabEvents
  *
  * @param   {object}  form  jQuery
  */
	registerTabEventsInQuickCreate: function registerTabEventsInQuickCreate(form) {
		App.Components.QuickCreate.registerTabEvents(form);
	},
	/**
  * Invoke App.Components.QuickCreate.quickCreateSave
  *
  * @param   {object}  form  jQuery
  *
  * @return  {function}        which return aDeferred
  */
	quickCreateSave: function quickCreateSave(form) {
		return App.Components.QuickCreate.save(form);
	},
	registerReminderNotice: function registerReminderNotice() {
		var self = this;
		$('#page').before('<div class="remindersNoticeContainer" tabindex="-1" role="dialog" aria-label="' + app.vtranslate('JS_REMINDER') + '" aria-hidden="true"></div>');
		var block = $('.remindersNoticeContainer');
		var remindersNotice = $('.remindersNotice');
		remindersNotice.on('click', function () {
			if (!remindersNotice.hasClass('autoRefreshing')) {
				Vtiger_Index_Js.requestReminder();
			}
			self.hideActionMenu();
			self.hideBreadcrumbActionMenu();
			block.toggleClass('toggled');
			self.hideReminderNotification();
			app.closeSidebar();
			self.hideSearchMenu();
		});
	},
	registerReminderNotification: function registerReminderNotification() {
		var self = this;
		$('#page').before('<div class="remindersNotificationContainer" tabindex="-1" role="dialog"></div>');
		var block = $('.remindersNotificationContainer');
		var remindersNotice = $('.notificationsNotice');
		remindersNotice.on('click', function () {
			if (!remindersNotice.hasClass('autoRefreshing')) {
				Vtiger_Index_Js.getNotificationsForReminder();
			}
			self.hideActionMenu();
			self.hideBreadcrumbActionMenu();
			block.toggleClass('toggled');
			self.hideReminderNotice();
			app.closeSidebar();
			self.hideSearchMenu();
		});
	},
	toggleBreadcrumbActions: function toggleBreadcrumbActions(container) {
		var actionsContainer = container.find('.js-header-toggle__actions');
		if (!actionsContainer.length) {
			return;
		}
		var actionBtn = container.find('.js-header-toggle__actions-btn');
		if (!actionsContainer.closest('.js-btn-toolbar').length) {
			var actionBtnMargin = 5;
			var cssActionsTop = { top: actionBtn.offset().top + actionBtn.outerHeight() + actionBtnMargin };
			actionsContainer.css(cssActionsTop);
		}
		actionBtn.on('click', function () {
			actionsContainer.toggleClass('is-active');
		});
	},

	registerMobileEvents: function registerMobileEvents() {
		var self = this,
		    container = this.getContentsContainer();
		$('.rightHeaderBtnMenu').on('click', function () {
			self.hideActionMenu();
			self.hideBreadcrumbActionMenu();
			self.hideSearchMenu();
			self.hideReminderNotice();
			self.hideReminderNotification();
			$('.mobileLeftPanel ').toggleClass('mobileMenuOn');
		});
		$('.js-quick-action-btn').on('click', function () {
			var currentTarget = $(this);
			app.closeSidebar();
			self.hideBreadcrumbActionMenu();
			self.hideSearchMenu();
			self.hideReminderNotice();
			self.hideReminderNotification();
			$('.actionMenu').toggleClass('actionMenuOn');
			if (currentTarget.hasClass('active')) {
				currentTarget.removeClass('active');
				currentTarget.attr('aria-expanded', 'false');
				currentTarget.popover();
			} else {
				currentTarget.addClass('active');
				currentTarget.attr('aria-expanded', 'true');
				currentTarget.popover('disable');
			}
			$('.quickCreateModules').on('click', function () {
				self.hideActionMenu();
			});
		});
		$('.searchMenuBtn').on('click', function () {
			var currentTarget = $(this);
			app.closeSidebar();
			self.hideActionMenu();
			self.hideBreadcrumbActionMenu();
			self.hideReminderNotice();
			self.hideReminderNotification();
			$('.searchMenu').toggleClass('toogleSearchMenu');
			if (currentTarget.hasClass('active')) {
				currentTarget.removeClass('active');
				$('.searchMenuBtn .c-header__btn').attr('aria-expanded', 'false');
			} else {
				currentTarget.addClass('active');
				$('.searchMenuBtn .c-header__btn').attr('aria-expanded', 'true');
			}
		});
		$('.js-header__btn--mail .dropdown').on('show.bs.dropdown', function () {
			app.closeSidebar();
			self.hideActionMenu();
			self.hideBreadcrumbActionMenu();
			self.hideReminderNotice();
			self.hideReminderNotification();
			self.hideSearchMenu();
		});
		this.toggleBreadcrumbActions(container);
	},
	hideMobileMenu: function hideMobileMenu() {
		$('.mobileLeftPanel ').removeClass('mobileMenuOn');
	},
	hideSearchMenu: function hideSearchMenu() {
		$('.searchMenu').removeClass('toogleSearchMenu');
	},
	hideActionMenu: function hideActionMenu() {
		$('.actionMenu').removeClass('actionMenuOn');
	},
	hideBreadcrumbActionMenu: function hideBreadcrumbActionMenu() {
		$('.js-header-toggle__actions').removeClass('is-active');
	},
	hideReminderNotice: function hideReminderNotice() {
		$('.remindersNoticeContainer').removeClass('toggled');
	},
	hideReminderNotification: function hideReminderNotification() {
		$('.remindersNotificationContainer').removeClass('toggled');
	},
	registerFooTable: function registerFooTable() {
		var container = $('.tableRWD');
		container.find('thead tr th:gt(1)').attr('data-hide', 'phone');
		container.find('thead tr th:gt(3)').attr('data-hide', 'tablet,phone');
		container.find('thead tr th:last').attr('data-hide', '');
		var whichColumnEnable = container.find('thead').attr('col-visible-alltime');
		container.find('thead tr th:eq(' + whichColumnEnable + ')').attr('data-hide', '');
		$('.tableRWD, .customTableRWD').footable({
			breakpoints: {
				phone: 768,
				tablet: 1024
			},
			addRowToggle: true,
			toggleSelector: ' > tbody > tr:not(.footable-row-detail)'
		});
		$('.footable-toggle').on('click', function (event) {
			event.stopPropagation();
			$(this).trigger('footable_toggle_row');
		});
		var records = $('.customTableRWD').find('[data-toggle-visible=false]');
		records.find('.footable-toggle').css('display', 'none');
	},
	registerSiteBarButton: function registerSiteBarButton(container) {
		var _this = this;

		var key = 'ShowHideRightPanel' + app.getModuleName();
		if (app.cacheGet(key) == 'show') {
			this.toggleSiteBar(container.find('.toggleSiteBarRightButton'));
		} else if (app.cacheGet(key) == null) {
			if (container.find('.siteBarRight').data('showpanel') == 1) {
				this.toggleSiteBar(container.find('.toggleSiteBarRightButton'));
			}
		}
		container.find('.toggleSiteBarRightButton').on('click', function (e) {
			var toogleButton = $(e.currentTarget);
			if (toogleButton.closest('.siteBarRight').hasClass('hideSiteBar')) {
				app.cacheSet(key, 'show');
			} else {
				app.cacheSet(key, 'hide');
			}
			_this.toggleSiteBar(toogleButton);
		});
	},
	toggleSiteBar: function toggleSiteBar(toogleButton) {
		$('.rowContent').toggleClass('js-sitebar--active');
		toogleButton.closest('.siteBarRight').toggleClass('hideSiteBar');
		toogleButton.find('.fas').toggleClass('fa-chevron-right fa-chevron-left');
		toogleButton.toggleClass('hideToggleSiteBarRightButton');
	},

	registerToggleButton: function registerToggleButton() {
		$('.buttonTextHolder .dropdown-menu a').on('click', function () {
			$(this).parents('.d-inline-block').find('.dropdown-toggle .textHolder').html($(this).text());
		});
	},
	listenTextAreaChange: function listenTextAreaChange() {
		var thisInstance = this;
		$('textarea').on('keyup', function () {
			var elem = $(this);
			if (!elem.data('has-scroll')) {
				elem.data('has-scroll', true);
				elem.on('scroll keyup', function () {
					thisInstance.resizeTextArea($(this));
				});
			}
			thisInstance.resizeTextArea($(this));
		});
	},
	resizeTextArea: function resizeTextArea(elem) {
		elem.height(1);
		elem.scrollTop(0);
		elem.height(elem[0].scrollHeight - elem[0].clientHeight + elem.height());
	},
	registerKnowledgeBaseModal: function registerKnowledgeBaseModal() {
		$('.js-knowledge-base-modal').on('click', function () {
			if (window.KnowledgeBaseModalVueComponent.mounted === undefined) {
				window.KnowledgeBaseModalVueComponent.mount({
					el: '#KnowledgeBaseModal',
					state: {
						moduleName: 'KnowledgeBase',
						dialog: true
					}
				});
				KnowledgeBaseModalVueComponent.mounted = true;
			} else {
				vuexStore.commit('KnowledgeBase/setDialog', true);
			}
		});
	},
	registerChat: function registerChat() {
		if (window === window.parent && window.ChatModalVueComponent !== undefined) {
			window.ChatModalVueComponent.mount({
				el: '#ChatModalVue'
			});
		}
	},

	registerEvents: function registerEvents() {
		var thisInstance = this;
		var container = thisInstance.getContentsContainer(),
		    menuContainer = container.find('.js-menu--scroll'),
		    quickCreateModal = container.find('.quickCreateModules');
		app.showNewScrollbarLeft(menuContainer, { suppressScrollX: true });
		app.showNewScrollbar(menuContainer.find('.subMenu').last(), { suppressScrollX: true });
		thisInstance.listenTextAreaChange();
		thisInstance.registerFooTable(); //Enable footable
		$('.js-clear-history').on('click', function () {
			app.clearBrowsingHistory();
		});
		$('.globalSearch').on('click', function () {
			var currentTarget = $(this);
			thisInstance.hideSearchMenu();
			var advanceSearchInstance = new Vtiger_AdvanceSearch_Js();
			advanceSearchInstance.setParentContainer(currentTarget.closest('.js-global-search__input'));
			advanceSearchInstance.initiateSearch();
		});
		$('.searchIcon').on('click', function (e) {
			var currentTarget = $(this).closest('.js-global-search__input').find('.js-global-search__value');
			var pressEvent = $.Event('keypress');
			pressEvent.which = 13;
			currentTarget.trigger(pressEvent);
		});
		thisInstance.registerAnnouncements();
		thisInstance.registerHotKeys();
		thisInstance.registerToggleButton();
		thisInstance.registerSiteBarButton($('#centerPanel'));
		//this.registerCalendarButtonClickEvent();
		//After selecting the global search module, focus the input element to type
		$('.basicSearchModulesList').on('change', function () {
			var value = $(this).closest('.js-global-search__input').find('.js-global-search__value');
			setTimeout(function () {
				value.focus();
			}, 100);
		});
		thisInstance.basicSearch();
		quickCreateModal.on('click', '.quickCreateModule', function (e, params) {
			var moduleName = $(e.currentTarget).data('name');
			quickCreateModal.modal('hide');
			thisInstance.quickCreateModule(moduleName);
		});
		thisInstance.registerReminderNotification();
		thisInstance.registerMobileEvents();
		thisInstance.registerReminderNotice();
		thisInstance.registerQuickCreateSearch();
		thisInstance.registerKnowledgeBaseModal();
		thisInstance.registerChat();
	}
});
$(document).ready(function () {
	window.addEventListener('popstate', function (event) {
		if (event.state) {
			window.location.href = event.state;
		}
	});
	Vtiger_Header_Js.getInstance().registerEvents();
});
//# sourceMappingURL=Header.min.js.map
