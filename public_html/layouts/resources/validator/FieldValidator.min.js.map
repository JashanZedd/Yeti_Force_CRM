{"version":3,"file":"FieldValidator.min.js","sources":["FieldValidator.js"],"sourcesContent":["/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce Sp. z o.o.\n *************************************************************************************/\n'use strict';\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Email_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar emailInstance = new Vtiger_Email_Validator_Js();\n\t\t\temailInstance.setElement(field);\n\t\t\tvar response = emailInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn emailInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t *Overwrites base function to avoid trimming and validate white spaces\n\t\t * @return fieldValue\n\t\t * */\n\t\tgetFieldValue: function() {\n\t\t\treturn this.getElement().val();\n\t\t},\n\t\t/**\n\t\t * Function to validate the email field data\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\treturn this.validateValue(fieldValue);\n\t\t},\n\t\t/**\n\t\t * Function to validate the email field data\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidateValue: function(fieldValue) {\n\t\t\tvar emailFilter = /^[_/a-zA-Z0-9*]+([!\"#$%&'()*+,./:;<=>?\\^_`{|}~-]?[a-zA-Z0-9/_/-])*@[a-zA-Z0-9]+([\\_\\-\\.]?[a-zA-Z0-9]+)*\\.([\\-\\_]?[a-zA-Z0-9])+(\\.?[a-zA-Z0-9]+)?$/;\n\t\t\tvar illegalChars = /[\\(\\)\\<\\>\\,\\;\\:\\\\\\\"\\[\\]]/;\n\n\t\t\tif (!emailFilter.test(fieldValue)) {\n\t\t\t\tthis.setError(app.vtranslate('JS_PLEASE_ENTER_VALID_EMAIL_ADDRESS'));\n\t\t\t\treturn false;\n\t\t\t} else if (fieldValue.match(illegalChars)) {\n\t\t\t\tthis.setError(app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldData = field.data();\n\t\t\tvar fieldInfo = fieldData.fieldinfo;\n\t\t\tif (\n\t\t\t\tfieldInfo &&\n\t\t\t\tfieldInfo.restrictedDomains &&\n\t\t\t\tfieldInfo.restrictedDomains.indexOf(fieldValue.split('@').pop()) !== -1\n\t\t\t) {\n\t\t\t\tthis.setError(app.vtranslate('JS_EMAIL_RESTRICTED_DOMAINS'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Phone_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the phone field data\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\treturn this.validateValue(fieldValue);\n\t\t},\n\t\t/**\n\t\t * Function to validate the phone field data\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidateValue: function(fieldValue) {\n\t\t\tif (fieldValue == '') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar field = this.getElement();\n\t\t\tvar form = field.closest('form');\n\t\t\tvar fieldData = field.data();\n\t\t\tvar result = true;\n\t\t\tif (fieldData.advancedVerification == 1) {\n\t\t\t\tvar thisInstance = this;\n\t\t\t\tvar fieldInfo = fieldData.fieldinfo;\n\t\t\t\tvar group = field.closest('.input-group');\n\t\t\t\tvar phoneCountryList = group.find('.phoneCountryList');\n\t\t\t\tfield.attr('readonly', true);\n\t\t\t\tlet moduleName = form.find('[name=\"module\"]').length\n\t\t\t\t\t? form.find('[name=\"module\"]').val()\n\t\t\t\t\t: app.getModuleName();\n\t\t\t\tif (moduleName === 'LayoutEditor') {\n\t\t\t\t\tmoduleName = $('#selectedModuleName').val();\n\t\t\t\t}\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tasync: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmodule: moduleName,\n\t\t\t\t\t\taction: 'Fields',\n\t\t\t\t\t\tmode: 'verifyPhoneNumber',\n\t\t\t\t\t\tfieldName: fieldInfo.name,\n\t\t\t\t\t\tphoneNumber: fieldValue,\n\t\t\t\t\t\tphoneCountry: phoneCountryList.val()\n\t\t\t\t\t}\n\t\t\t\t}).done(function(data) {\n\t\t\t\t\tif (data.result.isValidNumber == false) {\n\t\t\t\t\t\tthisInstance.setError(data.result.message);\n\t\t\t\t\t\tresult = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfield.val(data.result.number);\n\t\t\t\t\t\tfield.attr('title', data.result.geocoding + ' ' + data.result.carrier);\n\t\t\t\t\t\tif (phoneCountryList.val() != data.result.country) {\n\t\t\t\t\t\t\tphoneCountryList.val(data.result.country).trigger('change');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfield.attr('readonly', false);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_UserName_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tlet usernameInstance = new Vtiger_UserName_Validator_Js();\n\t\t\tusernameInstance.setElement(field);\n\t\t\tlet response = usernameInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn usernameInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the User Name\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet fieldValue = this.getFieldValue();\n\t\t\tlet fieldData = this.getElement().data();\n\t\t\tconst maximumLength =\n\t\t\t\ttypeof fieldData.fieldinfo !== 'undefined' ? fieldData.fieldinfo.maximumlength : '3,64';\n\t\t\tlet ranges = maximumLength.split(',');\n\t\t\tif (fieldValue.length < parseInt(ranges[0])) {\n\t\t\t\tthis.setError(app.vtranslate('JS_ENTERED_VALUE_IS_TOO_SHORT'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (fieldValue.length > parseInt(ranges[1])) {\n\t\t\t\tthis.setError(app.vtranslate('JS_ENTERED_VALUE_IS_TOO_LONG'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet negativeRegex = /^[a-zA-Z0-9_.@-]+$/;\n\t\t\tif (!negativeRegex.test(fieldValue)) {\n\t\t\t\tthis.setError(app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Integer_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar integerInstance = new Vtiger_Integer_Validator_Js();\n\t\t\tintegerInstance.setElement(field);\n\t\t\tvar response = integerInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn integerInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Integre field data\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet fieldValue = this.getFieldValue(),\n\t\t\t\tgroupSeperator = CONFIG.currencyGroupingSeparator,\n\t\t\t\tintegerRegex = new RegExp('(^[-+]?[\\\\d\\\\' + groupSeperator + ']+)$', 'g');\n\t\t\tif (!fieldValue.match(integerRegex)) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_PLEASE_ENTER_INTEGER_VALUE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet fieldInfo = this.getElement().data().fieldinfo;\n\t\t\tif (!fieldInfo || !fieldInfo.maximumlength) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet ranges = fieldInfo.maximumlength.split(',');\n\t\t\tif (ranges.length === 2) {\n\t\t\t\tif (fieldValue > parseFloat(ranges[1]) || fieldValue < parseFloat(ranges[0])) {\n\t\t\t\t\terrorInfo = app.vtranslate('JS_ERROR_MAX_VALUE');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (fieldValue > parseFloat(ranges[0]) || fieldValue < 0) {\n\t\t\t\t\terrorInfo = app.vtranslate('JS_ERROR_MAX_VALUE');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Double_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar doubleValidator = new Vtiger_Double_Validator_Js();\n\t\t\tdoubleValidator.setElement(field);\n\t\t\tvar response = doubleValidator.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn doubleValidator.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Decimal field data\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet response = this._super();\n\t\t\tif (response === true) {\n\t\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\t\tvar doubleRegex = /(^[-+]?\\d+)(\\.\\d+)?$/;\n\t\t\t\tif (!fieldValue.toString().match(doubleRegex)) {\n\t\t\t\t\tvar errorInfo = app.vtranslate('JS_PLEASE_ENTER_DECIMAL_VALUE');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlet fieldInfo = this.getElement().data().fieldinfo;\n\t\t\t\tif (!fieldInfo || !fieldInfo.maximumlength) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet maximumLength = fieldInfo.maximumlength;\n\t\t\t\tfieldValue = parseFloat(fieldValue);\n\t\t\t\tif (fieldValue > parseFloat(maximumLength) || fieldValue < -parseFloat(maximumLength)) {\n\t\t\t\t\terrorInfo = app.vtranslate('JS_ERROR_MAX_VALUE');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn response;\n\t\t},\n\t\t/**\n\t\t * Overwrites base function to avoid trimming and validate white spaces\n\t\t * @return fieldValue\n\t\t * */\n\t\tgetFieldValue: function() {\n\t\t\treturn App.Fields.Double.formatToDb(this.getElement().val());\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_PositiveNumber_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar positiveNumberInstance = new Vtiger_PositiveNumber_Validator_Js();\n\t\t\tpositiveNumberInstance.setElement(field);\n\t\t\tvar response = positiveNumberInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn positiveNumberInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar response = this._super();\n\t\t\tif (response !== true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\tvar negativeRegex = /(^[-]+\\d+)$/;\n\t\t\tvar parseFieldValue = App.Fields.Double.formatToDb(this.getFieldValue());\n\t\t\tif (isNaN(parseFieldValue) || fieldValue < 0 || fieldValue.match(negativeRegex)) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_ACCEPT_POSITIVE_NUMBER');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar maximumLength = null;\n\t\t\tif (this.getElement().data().fieldinfo) {\n\t\t\t\tmaximumLength = this.getElement().data().fieldinfo.maximumlength;\n\t\t\t} else {\n\t\t\t\tmaximumLength = this.getElement().data('maximumlength');\n\t\t\t}\n\t\t\tif (!maximumLength) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet ranges = maximumLength.split(',');\n\t\t\tif (ranges.length === 2) {\n\t\t\t\tif (fieldValue > parseFloat(ranges[1]) || fieldValue < parseFloat(ranges[0])) {\n\t\t\t\t\terrorInfo = app.vtranslate('JS_ERROR_MAX_VALUE');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (fieldValue > parseFloat(ranges[0]) || fieldValue < 0) {\n\t\t\t\t\terrorInfo = app.vtranslate('JS_ERROR_MAX_VALUE');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_PositiveNumber_Validator_Js(\n\t'Vtiger_Percentage_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar percentageInstance = new Vtiger_Percentage_Validator_Js();\n\t\t\tpercentageInstance.setElement(field);\n\t\t\tvar response = percentageInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn percentageInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the percentage field data\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate() {\n\t\t\tconst response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t} else {\n\t\t\t\tif (App.Fields.Double.formatToDb(this.getFieldValue()) > 100) {\n\t\t\t\t\tthis.setError(app.vtranslate('JS_PERCENTAGE_VALUE_SHOULD_BE_LESS_THAN_100'));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Url_Validator_Js',\n\t{\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar validatorInstance = new Vtiger_Url_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tconst result = validatorInstance.validate();\n\t\t\tif (result === true) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Url\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\tvar regexp = /(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)/gi;\n\t\t\tvar result = regexp.test(fieldValue);\n\t\t\tif (!result) {\n\t\t\t\tif (\n\t\t\t\t\tfieldValue.indexOf('http://') === 0 ||\n\t\t\t\t\tfieldValue.indexOf('https://') === 0 ||\n\t\t\t\t\tfieldValue.indexOf('ftp://') === 0 ||\n\t\t\t\t\tfieldValue.indexOf('ftps://') === 0 ||\n\t\t\t\t\tfieldValue.indexOf('telnet://') === 0 ||\n\t\t\t\t\tfieldValue.indexOf('smb://') === 0 ||\n\t\t\t\t\tfieldValue.indexOf('www.') === 0\n\t\t\t\t) {\n\t\t\t\t\tresult = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!result) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS'); //\"Please enter valid url\";\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_MultiSelect_Validator_Js',\n\t{\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar validatorInstance = new Vtiger_MultiSelect_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tvar result = validatorInstance.validate();\n\t\t\tif (result == true) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Multi select\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldInstance = this.getElement();\n\t\t\tvar selectElementValue = fieldInstance.val();\n\t\t\tif (selectElementValue == null) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_PLEASE_SELECT_ATLEAST_ONE_OPTION');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Email_Validator_Js(\n\t'Vtiger_MultiEmails_Validator_Js',\n\t{\n\t\tinvokeValidation: function(field) {\n\t\t\tvar validatorInstance = new Vtiger_MultiEmails_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tvar result = validatorInstance.validate();\n\t\t\tif (!result) {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Multi select\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldInstance = this.getElement();\n\t\t\tvar fieldInstanceValue = fieldInstance.val();\n\t\t\tif (fieldInstanceValue != '') {\n\t\t\t\tvar emailsArr = fieldInstanceValue.split(',');\n\t\t\t\tvar i;\n\t\t\t\tfor (i = 0; i < emailsArr.length; ++i) {\n\t\t\t\t\tvar result = this.validateValue(emailsArr[i]);\n\t\t\t\t\tif (result == false) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_MultiDomain_Validator_Js',\n\t{\n\t\tinvokeValidation(field, rules, i, options) {\n\t\t\tconst validatorInstance = new Vtiger_MultiDomain_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tconst result = validatorInstance.validate();\n\t\t\tif (result === true) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Multi Domain select\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate() {\n\t\t\tconst fieldInstance = this.getElement();\n\t\t\tconst selectElementValue = fieldInstance.val();\n\t\t\tif (Array.isArray(selectElementValue)) {\n\t\t\t\tfor (let value of selectElementValue) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\t!/(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]/iu.test(value)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.setError(app.vtranslate('JS_PLEASE_SELECT_VALID_DOMAIN_NAMES'));\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Double_Validator_Js(\n\t'Vtiger_GreaterThanZero_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar GreaterThanZeroInstance = new Vtiger_GreaterThanZero_Validator_Js();\n\t\t\tGreaterThanZeroInstance.setElement(field);\n\t\t\tvar response = GreaterThanZeroInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn GreaterThanZeroInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers and greater than zero value\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t} else {\n\t\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\t\tif (fieldValue <= 0) {\n\t\t\t\t\tvar errorInfo = app.vtranslate('JS_VALUE_SHOULD_BE_GREATER_THAN_ZERO');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_PositiveNumber_Validator_Js(\n\t'Vtiger_WholeNumber_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar instance = new Vtiger_WholeNumber_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tvar response = instance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers and whole Number\n\t\t * @return boolean true if validation is successful or false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet response = this._super();\n\t\t\tif (response !== true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tlet field = this.getElement(),\n\t\t\t\tfieldValue = this.getFieldValue(),\n\t\t\t\tfieldData = field.data(),\n\t\t\t\tfieldInfo = fieldData.fieldinfo,\n\t\t\t\terrorInfo;\n\t\t\tif (fieldValue % 1 !== 0) {\n\t\t\t\tif (!jQuery.isEmptyObject(fieldInfo)) {\n\t\t\t\t\terrorInfo = app.vtranslate('INVALID_NUMBER_OF') + ' ' + fieldInfo.label;\n\t\t\t\t} else {\n\t\t\t\t\terrorInfo = app.vtranslate('INVALID_NUMBER');\n\t\t\t\t}\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_lessThanToday_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the birthday field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldData = field.data();\n\t\t\tvar fieldDateFormat = fieldData.dateFormat;\n\t\t\tvar fieldInfo = fieldData.fieldinfo;\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\ttry {\n\t\t\t\tvar fieldDateInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, fieldDateFormat);\n\t\t\t} catch (err) {\n\t\t\t\tthis.setError(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfieldDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar todayDateInstance = new Date();\n\t\t\ttodayDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar comparedDateVal = todayDateInstance - fieldDateInstance;\n\t\t\tif (comparedDateVal <= 0) {\n\t\t\t\tvar errorInfo = fieldInfo.label + ' ' + app.vtranslate('JS_SHOULD_BE_LESS_THAN_CURRENT_DATE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_lessThanOrEqualToToday_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the datesold field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldData = field.data();\n\t\t\tvar fieldDateFormat = fieldData.dateFormat;\n\t\t\tvar fieldInfo = fieldData.fieldinfo;\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\ttry {\n\t\t\t\tvar fieldDateInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, fieldDateFormat);\n\t\t\t} catch (err) {\n\t\t\t\tthis.setError(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfieldDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar todayDateInstance = new Date();\n\t\t\ttodayDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar comparedDateVal = todayDateInstance - fieldDateInstance;\n\t\t\tif (comparedDateVal < 0) {\n\t\t\t\tvar errorInfo =\n\t\t\t\t\tfieldInfo.label +\n\t\t\t\t\t' ' +\n\t\t\t\t\tapp.vtranslate('JS_SHOULD_BE_LESS_THAN_OR_EQUAL_TO') +\n\t\t\t\t\t' ' +\n\t\t\t\t\tapp.vtranslate('JS_CURRENT_DATE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_greaterThanOrEqualToToday_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the dateinservice field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldData = field.data();\n\t\t\tvar fieldDateFormat = fieldData.dateFormat;\n\t\t\tvar fieldInfo = fieldData.fieldinfo;\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\ttry {\n\t\t\t\tvar fieldDateInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, fieldDateFormat);\n\t\t\t} catch (err) {\n\t\t\t\tthis.setError(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfieldDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar todayDateInstance = new Date();\n\t\t\ttodayDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar comparedDateVal = todayDateInstance - fieldDateInstance;\n\t\t\tif (comparedDateVal > 0) {\n\t\t\t\tvar errorInfo =\n\t\t\t\t\tfieldInfo.label +\n\t\t\t\t\t' ' +\n\t\t\t\t\tapp.vtranslate('JS_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO') +\n\t\t\t\t\t' ' +\n\t\t\t\t\tapp.vtranslate('JS_CURRENT_DATE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_greaterThanDependentField_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar fieldForValidation = field[0];\n\t\t\tif (jQuery(fieldForValidation).attr('name') == 'followup_date_start') {\n\t\t\t\tvar dependentFieldList = new Array('date_start');\n\t\t\t}\n\t\t\tvar instance = new Vtiger_greaterThanDependentField_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tvar response = instance.validate(dependentFieldList);\n\t\t\tif (response != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the birthday field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function(dependentFieldList) {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldInfo = field.data('fieldinfo');\n\t\t\tvar fieldLabel;\n\t\t\tif (typeof fieldInfo === 'undefined') {\n\t\t\t\tfieldLabel = jQuery(field).attr('name');\n\t\t\t} else {\n\t\t\t\tfieldLabel = fieldInfo.label;\n\t\t\t}\n\t\t\tvar contextFormElem = field.closest('form');\n\t\t\tfor (var i = 0; i < dependentFieldList.length; i++) {\n\t\t\t\tvar dependentField = dependentFieldList[i];\n\t\t\t\tvar dependentFieldInContext = jQuery('input[name=' + dependentField + ']', contextFormElem);\n\t\t\t\tif (dependentFieldInContext.length > 0) {\n\t\t\t\t\tvar dependentFieldLabel = dependentFieldInContext.data('fieldinfo').label;\n\t\t\t\t\tvar fieldDateInstance = this.getDateTimeInstance(field);\n\t\t\t\t\tvar dependentFieldDateInstance = this.getDateTimeInstance(dependentFieldInContext);\n\t\t\t\t\tvar comparedDateVal = fieldDateInstance - dependentFieldDateInstance;\n\t\t\t\t\tif (comparedDateVal < 0) {\n\t\t\t\t\t\tvar errorInfo =\n\t\t\t\t\t\t\tfieldLabel +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tapp.vtranslate('JS_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO') +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tdependentFieldLabel +\n\t\t\t\t\t\t\t'';\n\t\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\tgetDateTimeInstance: function(field) {\n\t\t\tvar dateFormat = field.data('dateFormat');\n\t\t\tvar fieldValue = field.val();\n\t\t\ttry {\n\t\t\t\tvar dateTimeInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, dateFormat);\n\t\t\t} catch (err) {\n\t\t\t\tthis.setError(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn dateTimeInstance;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_dateAndTimeGreaterThanDependentField_Validator_Js',\n\t{},\n\t{\n\t\tfieldDateTime: '',\n\t\tfieldDateTimeInstance: [],\n\t\tdateFormat: '',\n\t\t/**\n\t\t * Function to validate the date field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function(dependentFieldList) {\n\t\t\tvar thisInstance = this;\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldDateTime = '';\n\t\t\tvar fieldDateTimeInstance = [];\n\t\t\tvar contextFormElem = field.closest('form');\n\t\t\tvar view = contextFormElem.attr('name');\n\t\t\tif (view == 'EditView') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar j = 0;\n\t\t\tfor (var i = 0; i < dependentFieldList.length; i++) {\n\t\t\t\tvar dependentField = dependentFieldList[i];\n\t\t\t\tvar dependentFieldInContext = jQuery('input[name=' + dependentField + ']', contextFormElem);\n\t\t\t\tif (dependentFieldInContext.length > 0) {\n\t\t\t\t\tif (typeof dependentFieldInContext.data('dateFormat') === 'undefined' && fieldDateTime) {\n\t\t\t\t\t\tfieldDateTime += ' ' + dependentFieldInContext.val();\n\t\t\t\t\t\tfieldDateTimeInstance[j] = Vtiger_Helper_Js.getDateInstance(fieldDateTime, dateFormat);\n\t\t\t\t\t\tj++;\n\t\t\t\t\t} else if (typeof dependentFieldInContext.data('dateFormat') !== 'undefined') {\n\t\t\t\t\t\tvar dateFormat = dependentFieldInContext.data('dateFormat');\n\t\t\t\t\t\tfieldDateTime = dependentFieldInContext.val();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn thisInstance.difference(fieldDateTimeInstance);\n\t\t},\n\t\tdifference: function(fieldDateTimeInstance) {\n\t\t\tif (fieldDateTimeInstance.length == 2) {\n\t\t\t\tvar comparedDateVal = fieldDateTimeInstance[1] - fieldDateTimeInstance[0];\n\t\t\t\tif (comparedDateVal < 0) {\n\t\t\t\t\tvar errorInfo = app.vtranslate('JS_AN_INCORRECT_RANGE_OF_DATES_WAS_ENTERED');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_futureEventCannotBeHeld_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate event status , which cannot be held for future events\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function(dependentFieldList) {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldLabel = field.data('fieldinfo').label;\n\t\t\tvar status = field.val();\n\t\t\tvar contextFormElem = field.closest('form');\n\t\t\tfor (var i = 0; i < dependentFieldList.length; i++) {\n\t\t\t\tvar dependentField = dependentFieldList[i];\n\t\t\t\tvar dependentFieldInContext = jQuery('input[name=' + dependentField + ']', contextFormElem);\n\t\t\t\tif (dependentFieldInContext.length > 0) {\n\t\t\t\t\tvar dependentFieldLabel = dependentFieldInContext.data('fieldinfo').label;\n\t\t\t\t\tvar todayDateInstance = new Date();\n\t\t\t\t\tvar dateFormat = dependentFieldInContext.data('dateFormat');\n\t\t\t\t\tvar time = jQuery('input[name=time_start]', contextFormElem);\n\t\t\t\t\tvar fieldValue = dependentFieldInContext.val() + ' ' + time.val();\n\t\t\t\t\tvar dependentFieldDateInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, dateFormat);\n\t\t\t\t\tvar comparedDateVal = todayDateInstance - dependentFieldDateInstance;\n\t\t\t\t\tif (comparedDateVal < 0 && status == 'Held') {\n\t\t\t\t\t\tvar errorInfo =\n\t\t\t\t\t\t\tfieldLabel +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tapp.vtranslate('JS_FUTURE_EVENT_CANNOT_BE_HELD') +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tdependentFieldLabel +\n\t\t\t\t\t\t\t'';\n\t\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_lessThanDependentField_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the birthday field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function(dependentFieldList) {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldLabel = field.data('fieldinfo').label;\n\t\t\tvar contextFormElem = field.closest('form');\n\t\t\t//No need to validate if value is empty\n\t\t\tif (field.val().length == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (var i = 0; i < dependentFieldList.length; i++) {\n\t\t\t\tvar dependentField = dependentFieldList[i];\n\t\t\t\tvar dependentFieldInContext = jQuery('input[name=' + dependentField + ']', contextFormElem);\n\t\t\t\tif (dependentFieldInContext.length > 0) {\n\t\t\t\t\tvar dependentFieldLabel = dependentFieldInContext.data('fieldinfo').label;\n\t\t\t\t\tvar fieldDateInstance = this.getDateTimeInstance(field);\n\t\t\t\t\t//No need to validate if value is empty\n\t\t\t\t\tif (dependentFieldInContext.val().length == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar dependentFieldDateInstance = this.getDateTimeInstance(dependentFieldInContext);\n\t\t\t\t\tvar comparedDateVal = fieldDateInstance - dependentFieldDateInstance;\n\t\t\t\t\tif (comparedDateVal > 0) {\n\t\t\t\t\t\tvar errorInfo =\n\t\t\t\t\t\t\tfieldLabel +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tapp.vtranslate('JS_SHOULD_BE_LESS_THAN_OR_EQUAL_TO') +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tdependentFieldLabel +\n\t\t\t\t\t\t\t'';\n\t\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\tgetDateTimeInstance: function(field) {\n\t\t\tvar dateFormat = field.data('dateFormat');\n\t\t\tvar fieldValue = field.val();\n\t\t\ttry {\n\t\t\t\tvar dateTimeInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, dateFormat);\n\t\t\t} catch (err) {\n\t\t\t\tthis.setError(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn dateTimeInstance;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Currency_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar currencyValidatorInstance = new Vtiger_Currency_Validator_Js();\n\t\t\tcurrencyValidatorInstance.setElement(field);\n\t\t\tvar response = currencyValidatorInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn currencyValidatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Currency Field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tlet fieldData = this.getElement().data();\n\t\t\tlet decimalSeparator = fieldData.decimalSeparator\n\t\t\t\t? fieldData.decimalSeparator\n\t\t\t\t: CONFIG.currencyDecimalSeparator;\n\t\t\tlet groupSeparator = fieldData.groupSeparator ? fieldData.groupSeparator : CONFIG.currencyGroupingSeparator;\n\n\t\t\tlet strippedValue = this.getFieldValue().replace(decimalSeparator, '');\n\t\t\tlet spacePattern = /\\s/;\n\t\t\tif (spacePattern.test(decimalSeparator) || spacePattern.test(groupSeparator))\n\t\t\t\tstrippedValue = strippedValue.replace(/ /g, '');\n\t\t\tlet errorInfo;\n\n\t\t\tif (groupSeparator === '$') {\n\t\t\t\tgroupSeparator = '\\\\$';\n\t\t\t}\n\t\t\tif (groupSeparator === '.') {\n\t\t\t\tgroupSeparator = '\\\\.';\n\t\t\t}\n\t\t\tlet regex = new RegExp(groupSeparator, 'g');\n\t\t\tstrippedValue = strippedValue.replace(regex, '');\n\t\t\t//Note: Need to review if we should allow only positive values in currencies\n\t\t\t/*if(strippedValue < 0){\n\t\t var errorInfo = app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS');//\"currency value should be greater than or equal to zero\";\n\t\t this.setError(errorInfo);\n\t\t return false;\n\t\t }*/\n\t\t\tif (isNaN(strippedValue)) {\n\t\t\t\terrorInfo = app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (strippedValue < 0) {\n\t\t\t\terrorInfo = app.vtranslate('JS_ACCEPT_POSITIVE_NUMBER');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst maximumLength = typeof fieldData.fieldinfo !== 'undefined' ? fieldData.fieldinfo.maximumlength : null;\n\t\t\tif (maximumLength && strippedValue > parseFloat(maximumLength)) {\n\t\t\t\terrorInfo = app.vtranslate('JS_ERROR_MAX_VALUE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Currency_Validator_Js('Vtiger_NumberUserFormat_Validator_Js', {\n\t/**\n\t *Function which invokes field validation\n\t * @param accepts field element as parameter\n\t * @return error if validation fails true on success\n\t */\n\tinvokeValidation: function(field, rules, i, options) {\n\t\tlet instance = new Vtiger_Currency_Validator_Js();\n\t\tinstance.setElement(field);\n\t\tif (instance.validate() !== true) {\n\t\t\treturn instance.getError();\n\t\t}\n\t}\n});\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_ReferenceField_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers and whole Number\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar parentElement = field.closest('.fieldValue');\n\t\t\tvar referenceField = parentElement.find('.sourceField');\n\t\t\tvar referenceFieldValue = referenceField.val();\n\t\t\tif (referenceFieldValue == '') {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_REQUIRED_FIELD');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Date_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar dateValidatorInstance = new Vtiger_Date_Validator_Js();\n\t\t\tdateValidatorInstance.setElement(field);\n\t\t\tvar response = dateValidatorInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn dateValidatorInstance.getError();\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers and whole Number\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldData = field.data();\n\t\t\tvar fieldDateFormat = fieldData.dateFormat;\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\ttry {\n\t\t\t\tif (fieldData.calendarType === 'range') {\n\t\t\t\t\tfieldValue = fieldValue.split(',');\n\t\t\t\t\tif (fieldValue.length !== 2) {\n\t\t\t\t\t\tthrow new Error();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfieldValue = [fieldValue];\n\t\t\t\t}\n\t\t\t\tfieldValue.forEach(key => {\n\t\t\t\t\tVtiger_Helper_Js.getDateInstance(key, fieldDateFormat);\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_PLEASE_ENTER_VALID_DATE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Date_Validator_Js('Vtiger_Datetime_Validator_Js', {}, {});\nVtiger_Base_Validator_Js(\n\t'Vtiger_Time_Validator_Js',\n\t{\n\t\t/**\n\t\t * Function which invokes field validation\n\t\t * @param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar validatorInstance = new Vtiger_Time_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tvar result = validatorInstance.validate();\n\t\t\tif (result == true) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Time Fields\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet format = CONFIG.hourFormat;\n\t\t\tif (this.field.data('format') && [12, 24].indexOf(this.field.data('format')) != -1) {\n\t\t\t\tformat = this.field.data('format');\n\t\t\t}\n\t\t\tlet regexp = '';\n\t\t\tswitch (format) {\n\t\t\t\tcase 12:\n\t\t\t\t\tregexp = new RegExp('^([0][0-9]|1[0-2]):([0-5][0-9])([ ]PM|[ ]AM|PM|AM)$');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tregexp = new RegExp('^(2[0-3]|[0][0-9]|1[0-9]):([0-5][0-9])$');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!regexp.test(this.getFieldValue())) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_PLEASE_ENTER_VALID_TIME');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_Twitter_Validator_Js',\n\t{\n\t\t/**\n\t\t * Function which invokes field validation\n\t\t * @param {jQuery} field - accepts field element as parameter\n\t\t * @return string|true - error text if validation fails, true on success\n\t\t */\n\t\tinvokeValidation(field, rules, i, options) {\n\t\t\tlet validatorInstance = new Vtiger_Twitter_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tlet result = validatorInstance.validate();\n\t\t\tif (result == true) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Twwiter Account\n\t\t * @return bool true if validation is successfull\n\t\t */\n\t\tvalidate() {\n\t\t\tlet fieldValue = this.getFieldValue();\n\t\t\tif (!fieldValue.match(/^[a-zA-Z0-9_]{1,15}$/g)) {\n\t\t\t\tthis.setError(app.vtranslate('JS_PLEASE_ENTER_VALID_TWITTER_ACCOUNT'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Email_Validator_Js(\n\t'Vtiger_MultiEmail_Validator_Js',\n\t{\n\t\t/**\n\t\t * Function which invokes field validation\n\t\t * @param {jQuery} field - accepts field element as parameter\n\t\t * @return string|true - error text if validation fails, true on success\n\t\t */\n\t\tinvokeValidation(field) {\n\t\t\tlet validatorInstance = new Vtiger_MultiEmail_Validator_Js();\n\t\t\tvalidatorInstance.setElement(field);\n\t\t\tlet result = validatorInstance.validate();\n\t\t\tif (result == true) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn validatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Multi email. Check if the email address is duplicated.\n\t\t * @return bool true if validation is successfull\n\t\t */\n\t\tvalidate() {\n\t\t\tlet fieldValue = this.getFieldValue();\n\t\t\tif (fieldValue === '') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.validateValue(fieldValue) === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet allFields = $(this.field)\n\t\t\t\t.closest('div.js-multi-email')\n\t\t\t\t.eq(0)\n\t\t\t\t.find('[class*=js-multi-email-row]');\n\t\t\tlet arrayLength = allFields.length;\n\t\t\tfor (let i = 0; i < arrayLength; ++i) {\n\t\t\t\tlet inputField = $(allFields[i])\n\t\t\t\t\t.find('input.js-email')\n\t\t\t\t\t.eq(0);\n\t\t\t\tif (inputField.val() === '') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet inputClass1 = $(allFields[i])\n\t\t\t\t\t.closest('div[class*=js-multi-email-row-]')\n\t\t\t\t\t.eq(0)\n\t\t\t\t\t.attr('class');\n\t\t\t\tlet inputClass2 = $(this.field)\n\t\t\t\t\t.closest('div[class*=js-multi-email-row-]')\n\t\t\t\t\t.eq(0)\n\t\t\t\t\t.attr('class');\n\t\t\t\tif (inputClass1 !== inputClass2 && inputField.val() === fieldValue) {\n\t\t\t\t\tthis.setError(app.vtranslate('JS_EMAIL_DUPLICATED'));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\n//Calendar Specific validators\n// We have placed it here since quick create will not load module specific validators\n\nVtiger_greaterThanDependentField_Validator_Js(\n\t'Calendar_greaterThanDependentField_Validator_Js',\n\t{},\n\t{\n\t\tgetDateTimeInstance: function(field) {\n\t\t\tlet form = field.closest('form'),\n\t\t\t\ttimeField,\n\t\t\t\ttimeFieldValue;\n\t\t\tif (field.attr('name') === 'date_start') {\n\t\t\t\ttimeField = form.find('[name=\"time_start\"]');\n\t\t\t\ttimeFieldValue = timeField.val();\n\t\t\t} else if (field.attr('name') === 'due_date') {\n\t\t\t\ttimeField = form.find('[name=\"time_end\"]');\n\t\t\t\tif (timeField.length > 0) {\n\t\t\t\t\ttimeFieldValue = timeField.val();\n\t\t\t\t} else {\n\t\t\t\t\t//Max value for the day\n\t\t\t\t\ttimeFieldValue = '11:59 PM';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet dateFieldValue = field.val() + ' ' + timeFieldValue,\n\t\t\t\tdateFormat = field.data('dateFormat');\n\t\t\treturn Vtiger_Helper_Js.getDateInstance(dateFieldValue, dateFormat);\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Calendar_greaterThanToday_Validator_Js',\n\t{},\n\t{\n\t\t/**\n\t\t * Function to validate the birthday field\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldData = field.data();\n\t\t\tvar fieldDateFormat = fieldData.dateFormat;\n\t\t\tvar fieldInfo = fieldData.fieldinfo;\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\ttry {\n\t\t\t\tvar fieldDateInstance = Vtiger_Helper_Js.getDateInstance(fieldValue, fieldDateFormat);\n\t\t\t} catch (err) {\n\t\t\t\tthis.setError(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfieldDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar todayDateInstance = new Date();\n\t\t\ttodayDateInstance.setHours(0, 0, 0, 0);\n\t\t\tvar comparedDateVal = todayDateInstance - fieldDateInstance;\n\t\t\tif (comparedDateVal >= 0) {\n\t\t\t\tvar errorInfo = fieldInfo.label + ' ' + app.vtranslate('JS_SHOULD_BE_GREATER_THAN_CURRENT_DATE');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Calendar_RepeatMonthDate_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar repeatMonthDateValidatorInstance = new Calendar_RepeatMonthDate_Validator_Js();\n\t\t\trepeatMonthDateValidatorInstance.setElement(field);\n\t\t\tvar response = repeatMonthDateValidatorInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn repeatMonthDateValidatorInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers and whole Number\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldValue = this.getFieldValue();\n\n\t\t\tif (\n\t\t\t\tparseInt(parseFloat(fieldValue)) != fieldValue ||\n\t\t\t\tfieldValue == '' ||\n\t\t\t\tparseInt(fieldValue) > '31' ||\n\t\t\t\tparseInt(fieldValue) <= 0\n\t\t\t) {\n\t\t\t\tvar result = app.vtranslate('JS_NUMBER_SHOULD_BE_LESS_THAN_32');\n\t\t\t\tthis.setError(result);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_WholeNumber_Validator_Js(\n\t'Vtiger_WholeNumberGreaterThanZero_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar WholeNumberGreaterThanZero = new Vtiger_WholeNumberGreaterThanZero_Validator_Js();\n\t\t\tWholeNumberGreaterThanZero.setElement(field);\n\t\t\tvar response = WholeNumberGreaterThanZero.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn WholeNumberGreaterThanZero.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers and greater than zero value\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t} else {\n\t\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\t\tif (fieldValue == 0) {\n\t\t\t\t\tvar errorInfo = app.vtranslate('JS_VALUE_SHOULD_BE_GREATER_THAN_ZERO');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_AlphaNumeric_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar alphaNumericInstance = new Vtiger_AlphaNumeric_Validator_Js();\n\t\t\talphaNumericInstance.setElement(field);\n\t\t\tvar response = alphaNumericInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn alphaNumericInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldValue = field.val();\n\t\t\tvar alphaNumericRegex = /^[a-z0-9 _-]*$/i;\n\t\t\tif (!fieldValue.match(alphaNumericRegex)) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_AlphaNumericWithSlashesCurlyBraces_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar alphaNumericInstance = new Vtiger_AlphaNumericWithSlashesCurlyBraces_Validator_Js();\n\t\t\talphaNumericInstance.setElement(field);\n\t\t\tvar response = alphaNumericInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn alphaNumericInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldValue = field.val();\n\t\t\tvar alphaNumericRegex = /^[\\/a-z\\\\0-9{}: _-]*$/i;\n\t\t\tif (!fieldValue.match(alphaNumericRegex)) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_InputMask_Validator_Js',\n\t{\n\t\t/**\n\t\t *Function which invokes field validation\n\t\t *@param accepts field element as parameter\n\t\t * @return error if validation fails true on success\n\t\t */\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar maskInstance = new Vtiger_InputMask_Validator_Js();\n\t\t\tmaskInstance.setElement(field);\n\t\t\tvar response = maskInstance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn maskInstance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the Positive Numbers\n\t\t * @return  boolean true if validation is successful false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tlet response = this._super();\n\t\t\tif (response !== true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tlet field = this.getElement(),\n\t\t\t\terrorInfo;\n\t\t\tif (field.attr('data-inputmask')) {\n\t\t\t\tlet unMaskedValue = field.inputmask('unmaskedvalue'),\n\t\t\t\t\tgetMetaData = field.inputmask('getmetadata'),\n\t\t\t\t\tmaskLength =\n\t\t\t\t\t\t(getMetaData.match(/9/g) || []).length +\n\t\t\t\t\t\t(getMetaData.match(/A/g) || []).length +\n\t\t\t\t\t\t(getMetaData.match(/'*'/g) || []).length;\n\t\t\t\tif (unMaskedValue.length !== 0 && maskLength > unMaskedValue.length) {\n\t\t\t\t\terrorInfo = app.vtranslate('JS_INVALID_LENGTH');\n\t\t\t\t\tthis.setError(errorInfo);\n\t\t\t\t\twindow.inputMaskValidation = true;\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\twindow.inputMaskValidation = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (window.inputMaskValidation) {\n\t\t\t\terrorInfo = app.vtranslate('JS_INVALID_LENGTH');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_Textparser_Validator_Js',\n\t{\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar instance = new Vtiger_TextParser_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tvar response = instance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tvalidate: function() {\n\t\t\tvar response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tvar field = this.getElement();\n\t\t\tvar fieldValue = field.val();\n\t\t\tvar regex = /^\\$\\((\\w+) : ([,\"\\+\\-\\[\\]\\&\\w\\s\\|]+)\\)\\$$/;\n\t\t\tif (!regex.test(fieldValue)) {\n\t\t\t\tvar errorInfo = app.vtranslate('JS_INVALID_LENGTH');\n\t\t\t\tthis.setError(errorInfo);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\n\nVtiger_Base_Validator_Js(\n\t'Vtiger_YetiForceCompanyName_Validator_Js',\n\t{\n\t\tinvokeValidation: function(field, rules, i, options) {\n\t\t\tvar instance = new Vtiger_YetiForceCompanyName_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tvar response = instance.validate();\n\t\t\tif (response != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tvalidate: function() {\n\t\t\tlet response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tconst field = this.getElement();\n\t\t\tconst fieldValue = field.val();\n\t\t\tif (fieldValue.toLowerCase().indexOf('yetiforce') >= 0) {\n\t\t\t\tthis.setError(app.vtranslate('JS_YETIFORCE_COMPANY_NAME_NOT_ALLOWED'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_MultiImage_Validator_Js',\n\t{\n\t\tinvokeValidation(field, rules, i, options) {\n\t\t\tconst instance = new Vtiger_MultiImage_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tif (instance.validate() != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tvalidate() {\n\t\t\tlet response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tconst field = this.getElement();\n\t\t\tconst fieldValue = field.val();\n\t\t\tif (field.data('fieldinfo').mandatory && JSON.parse(fieldValue).length === 0) {\n\t\t\t\tthis.setError(app.vtranslate('JS_REQUIRED_FIELD'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_MaxSizeInByte_Validator_Js',\n\t{\n\t\tinvokeValidation(field, rules, i, options) {\n\t\t\tconst instance = new Vtiger_MaxSizeInByte_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tif (instance.validate() != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tvalidate() {\n\t\t\tlet response = this._super();\n\t\t\tif (response != true) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\tconst field = this.getElement();\n\t\t\tconst fieldValue = field.val();\n\t\t\tif (\n\t\t\t\tfield.data('fieldinfo').maximumlength &&\n\t\t\t\tnew TextEncoder().encode(fieldValue).byteLength > field.data('fieldinfo').maximumlength\n\t\t\t) {\n\t\t\t\tthis.setError(\n\t\t\t\t\tapp.vtranslate('JS_MAXIMUM_TEXT_SIZE_IN_BYTES') + ' ' + field.data('fieldinfo').maximumlength\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Base_Validator_Js(\n\t'Vtiger_FieldName_Validator_Js',\n\t{\n\t\tinvokeValidation(field, rules, i, options) {\n\t\t\tconst instance = new Vtiger_FieldName_Validator_Js();\n\t\t\tinstance.setElement(field);\n\t\t\tif (instance.validate() != true) {\n\t\t\t\treturn instance.getError();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t/**\n\t\t * Function to validate the field name\n\t\t * @return true if validation is successfull\n\t\t * @return false if validation error occurs\n\t\t */\n\t\tvalidate: function() {\n\t\t\tvar fieldValue = this.getFieldValue();\n\t\t\tif (fieldValue === 'data') {\n\t\t\t\tthis.setError(app.vtranslate('JS_CONTAINS_ILLEGAL_CHARACTERS'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n);\nVtiger_Double_Validator_Js('Vtiger_Advpercentage_Validator_Js', {});\n"],"names":["Vtiger_Base_Validator_Js","field","rules","i","options","emailInstance","Vtiger_Email_Validator_Js","setElement","validate","getError","this","getElement","val","fieldValue","getFieldValue","validateValue","test","setError","app","vtranslate","match","fieldInfo","data","fieldinfo","restrictedDomains","indexOf","split","pop","form","closest","fieldData","result","advancedVerification","thisInstance","phoneCountryList","find","attr","moduleName","length","getModuleName","$","request","name","done","isValidNumber","message","number","geocoding","carrier","country","trigger","usernameInstance","Vtiger_UserName_Validator_Js","ranges","maximumlength","parseInt","integerInstance","Vtiger_Integer_Validator_Js","groupSeperator","CONFIG","currencyGroupingSeparator","integerRegex","RegExp","errorInfo","parseFloat","doubleValidator","Vtiger_Double_Validator_Js","response","_super","toString","maximumLength","App","Fields","Double","formatToDb","positiveNumberInstance","Vtiger_PositiveNumber_Validator_Js","parseFieldValue","isNaN","percentageInstance","Vtiger_Percentage_Validator_Js","validatorInstance","Vtiger_Url_Validator_Js","Vtiger_MultiSelect_Validator_Js","Vtiger_MultiEmails_Validator_Js","fieldInstanceValue","emailsArr","Vtiger_MultiDomain_Validator_Js","selectElementValue","Array","isArray","value","GreaterThanZeroInstance","Vtiger_GreaterThanZero_Validator_Js","instance","Vtiger_WholeNumber_Validator_Js","jQuery","isEmptyObject","label","fieldDateFormat","dateFormat","fieldDateInstance","Vtiger_Helper_Js","getDateInstance","err","setHours","todayDateInstance","Date","fieldForValidation","dependentFieldList","Vtiger_greaterThanDependentField_Validator_Js","fieldLabel","contextFormElem","dependentField","dependentFieldInContext","dependentFieldLabel","getDateTimeInstance","dateTimeInstance","fieldDateTime","fieldDateTimeInstance","j","difference","status","time","currencyValidatorInstance","Vtiger_Currency_Validator_Js","decimalSeparator","currencyDecimalSeparator","groupSeparator","strippedValue","replace","spacePattern","regex","dateValidatorInstance","Vtiger_Date_Validator_Js","calendarType","Error","forEach","key","Vtiger_Time_Validator_Js","format","hourFormat","regexp","Vtiger_Twitter_Validator_Js","Vtiger_MultiEmail_Validator_Js","allFields","eq","arrayLength","inputField","timeField","timeFieldValue","dateFieldValue","repeatMonthDateValidatorInstance","Calendar_RepeatMonthDate_Validator_Js","WholeNumberGreaterThanZero","Vtiger_WholeNumberGreaterThanZero_Validator_Js","alphaNumericInstance","Vtiger_AlphaNumeric_Validator_Js","Vtiger_AlphaNumericWithSlashesCurlyBraces_Validator_Js","maskInstance","Vtiger_InputMask_Validator_Js","unMaskedValue","inputmask","getMetaData","maskLength","inputMaskValidation","window","Vtiger_TextParser_Validator_Js","Vtiger_YetiForceCompanyName_Validator_Js","toLowerCase","Vtiger_MultiImage_Validator_Js","mandatory","JSON","parse","Vtiger_MaxSizeInByte_Validator_Js","TextEncoder","encode","byteLength","Vtiger_FieldName_Validator_Js"],"mappings":"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"}